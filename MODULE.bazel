"Bazel dependencies"

module(
    name = "rules_rs",
)

bazel_dep(name = "rules_rust", version = "0.64.0")
# TODO(zbarsky): A bit unfortunate that we need to define a new set of host tools instead of reusing the existing one pulled in by rules_rust.
# Can we figure out how to access that? Perhaps add an alias?
rust_host_tools = use_extension("@rules_rust//rust:extensions.bzl", "rust_host_tools")
rust_host_tools.host_tools(
    name = "rs_rust_host_tools",
)
use_repo(
    rust_host_tools,
    "rs_rust_host_tools",
)

cargo_bootstrap_repository = use_repo_rule("@rules_rust//cargo:defs.bzl", "cargo_bootstrap_repository")
cargo_bootstrap_repository(
    name = "toml2json_host_bin",
    binary = "toml2json",
    srcs = ["//toml2json:src/main.rs"],
    cargo_toml = "//toml2json:Cargo.toml",
    cargo_lockfile = "//toml2json:Cargo.lock",
    rust_toolchain_cargo_template = "@rust_host_tools//:bin/{tool}",
    rust_toolchain_rustc_template = "@rust_host_tools//:bin/{tool}",
)

bazel_dep(name = "bazel_skylib", version = "1.4.1")
bazel_dep(name = "package_metadata", version = "0.0.5")
bazel_dep(name = "platforms", version = "0.0.5")
bazel_dep(name = "rules_cc", version = "0.2.8")

bazel_dep(name = "gazelle", version = "0.35.0", dev_dependency = True, repo_name = "bazel_gazelle")
bazel_dep(name = "bazel_skylib_gazelle_plugin", version = "1.4.1", dev_dependency = True)
bazel_dep(name = "aspect_bazel_lib", version = "1.32.1", dev_dependency = True)
bazel_dep(name = "buildifier_prebuilt", version = "6.1.2", dev_dependency = True)
